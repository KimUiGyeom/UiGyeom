	select
		고객번호,
		고객회사명,
        담당자명,
        마일리지
        from 고객
        where 마일리지 = (select max(마일리지)
						from 고객);

		select
			고객회사명,
            담당자명
            from 고객
            where 고객번호=(select 고객번호
						from 주문
                        where 주문번호 = 'H0250');
						
		select
			고객회사명,
            담당자명
            from 고객
            inner join 주문
            on 고객.고객번호 = 주문.고객번호
            where 주문번호 = 'H0250';
            
		select
			담당자명,
            고객회사명,
            마일리지
            from 고객
            where 마일리지 > (select min(마일리지)
							from 고객
                            where 도시 = '부산광역시');
                            
        select
			마일리지
            from 고객
            where 도시 = '부산광역시';
		
        select avg(마일리지), 지역
			from 고객
            group by 지역;

		/* 예제 6-7 내부조인 방식으로 표현 */
		select
			distinct
            고객.고객번호,
            주소,
            전화번호,
            고객회사명
			from 고객
            inner join 주문
			on 고객.고객번호=주문.고객번호;
            
		select 
			count(*) as 주문건수
            from 주문
            where 고객번호 in (select 고객번호
							from 고객
                            where 도시 = '부산광역시');
            
		select
			담당자명,
            고객회사명,
            마일리지
            from 고객
            where 마일리지 > any(select 마일리지
							from 고객
                            where 도시 = '부산광역시');
                            
		select
			담당자명,
            고객회사명,
            마일리지
            from 고객
            where 마일리지 > all(select avg(마일리지)
							from 고객
                            group by 지역);
							
		select
			고객회사명,
            마일리지
            from 고객
            where 마일리지 > all(select 
							avg(마일리지)
							from 고객
                            group by 지역);
		
        select
			고객번호,
            고객회사명
            from 고객
            where exists(select *
						from 주문
                        where 고객번호=고객.고객번호);

		select
			고객번호,
            고객회사명
            from 고객
            where 고객번호 in(select distinct 고객번호
							from 주문);
                            
		select distinct
				고객.고객번호,
                고객회사명
                from 고객
                inner join 주문
                on 고객.고객번호=주문.고객번호;
                
		/* 단 한 번도 주문한 적이 없는 고객 정보*/
        select distinct
			고객.고객번호,
            주소,
            전화번호,
            고객회사명
            from 고객
			where not exists(select *
						from 주문
                        where 고객번호=고객.고객번호);
        
        select
			도시,
            avg(마일리지) as 평균마일리지
            from 고객
            group by 도시
            having avg(마일리지) > (select
								avg(마일리지)
                                from 고객);
							
		select
			avg(마일리지)
            from 고객;
            
		select
			담당자명,
            고객회사명,
            마일리지,
            고객.도시
            from 고객;
            
        select 
				도시,
				avg(마일리지) as 도시_평균마일리지
                from 고객
                group by 도시;
		
        select
			max(주문일)
            from 주문, 고객
            where 주문.고객번호=고객.고객번호;
            
		select
			도시,
            avg(마일리지) as 평균마일리지
            from 고객
            group by 도시
            having avg(마일리지) > (select avg(마일리지)
								from 고객);
                                
		select
			담당자명,
			고객회사명,
            마일리지,
            고객.도시,
            도시_평균마일리지,
            도시_평균마일리지-마일리지 as 차이
            from 고객
            ,(select 
					도시,
                    avg(마일리지) as 도시_평균마일리지
                    from 고객
                    group by 도시) as 도시별요약
                    where 고객.도시=도시별요약.도시;
                    
		select
			고객번호,
            담당자명,
            (select max(주문일)
					from 주문
                    where 주문.고객번호=고객.고객번호) as 최종주문일
                    from 고객;
               
		/* 위 예제를 inner join 형태로 표현 */
		select
			고객.고객번호,
            담당자명,
            최종주문.최종주문일
            from 고객
            inner join(select 
						주문.고객번호,
                        max(주문일) as 최종주문일
                        from 주문
                        group by 주문.고객번호) as 최종주문
			on 고객.고객번호=최종주문.고객번호;
            
        with 도시별요약 as
        (
			select 도시,
					avg(마일리지) as 도시_평균마일리지
                    from 고객
                    group by 도시
		)
        
        select
			담당자명,
            고객회사명,
            마일리지,
            고객.도시,
            도시_평균마일리지,
            도시_평균마일리지-마일리지 as 차이
            from 고객,
				도시별요약
			where 고객.도시=도시별요약.도시;
		
        select
			사원번호,
            이름,
            상사번호,
            (select 이름 
					from 사원 as 상사
					where 상사.사원번호=사원.상사번호) as 상사이름
			from 사원;
            
		select
			도시,
            담당자명,
            고객회사명,
            마일리지
            from 고객
            where(도시, 마일리지) in (select 도시, max(마일리지)
									from 고객
                                    group by 도시);
				
		/* 점검문제 1번 */
        select
			부서.부서명
            from 부서
            inner join 사원
            on 사원.부서번호=부서.부서번호
            where 이름 ='배재용';
            
            select
				부서명
                from 부서
                where 부서번호 in (select 부서번호
								from 사원
                                where 이름 ='배재용');
		
        /* 점검문제 2번 */
        select
			제품번호,
            제품명,
            포장단위,
            단가,
            재고,
            단가*재고 as 재고금액
            from 제품
			where not exists(select *
						from 주문세부
                        where 제품번호=제품.제품번호);
                        
			select
				제품번호,
                제품명,
                포장단위,
                단가,
                재고,
                (단가 * 재고) as 재고금액
                from 제품
                where 제품번호 not in (select 제품번호 from 주문세부);
				
        /* 점검문제 3번 */
        select
			담당자명,
            고객회사명,
            (select count(*) from 주문 where 주문.고객번호=고객.고객번호) as 주문건수,
            (select min(주문일) from 주문 where 주문.고객번호=고객.고객번호) as 최초주문일,
            (select max(주문일) from 주문 where 주문.고객번호=고객.고객번호) as 최종주문일
            from 고객;
            
		select
			담당자명,
            고객회사명,
            (select count(고객번호) from 주문 where 고객.고객번호=주문.고객번호) as 주문건수,
            (select min(주문일) from 주문 where 고객.고객번호=주문.고객번호) as 최초주문일,
            (select max(주문일) from 주문 where 고객.고객번호=주문.고객번호) as 최종주문일
            from 고객;
            
		insert into 부서
        values('A5', '마케팅부');
		
		insert into 제품
        values(91, '연어피클소스', null, 5000, 40);
            
		insert into 제품(제품번호, 제품명, 단가, 재고)
        values(90, '연어핫소스', 4000, 50);
        
        insert into 사원(사원번호, 이름, 직위, 성별, 입사일)
        values('E20', '김사과', '수습사원', '남', curdate()),
			('E21', '박바나나', '수습사원', '여', curdate()),
            ('E22', '정오렌지', '수습사원', '여', curdate());
		
        update 사원
        set 이름='김레몬'
        where 사원번호='E20';
        
        update 제품
        set 포장단위 = '200 ml bottles'
        where 제품번호=91;
        
        update 제품
        set 단가 = 단가*1.1,
			재고 = 재고-10
            where 제품번호 = 91;
        
        delete from 제품
        where 제품번호 = 91;
        
        delete from 사원
        order by 입사일 desc
        limit 3;
        
        select *
        from 사원
        where 이름 in('김레몬', '박바나나', '정오렌지');
        
        insert into 제품(제품번호, 제품명, 단가, 재고)
        values(91, '연어피클핫소스', 6000, 50)
        on duplicate key update
        제품명 = '연어피클핫소스', 단가 = 6000, 재고 = 50;
        
        create table 고객주문요약
        (
			고객번호 CHAR(5) PRIMARY KEY,
            고객회사명 VARCHAR(50),
            주문건수 INT,
            최종주문일 DATE
		);
        
      select avg(단가)
      from 제품
      where 제품명 like '%소스%';
      
      select distinct 고객번호
      from 주문 as 주문고객;
      
      select 
		고객.*
        from 고객
        left outer join 주문
        on 고객.고객번호 = 주문.고객번호
        where 주문.고객번호 is null;
        
        insert into 고객주문요약
			select 고객.고객번호,
					고객회사명,
                    count(*),
                    max(주문일)
			from 고객, 주문
            where 고객.고객번호 = 주문.고객번호
            group by 고객.고객번호, 고객회사명;
            
		update 제품
        set 단가 = (
					select *
                    from (
							select avg(단가)
                            from 제품
                            where 제품명 like '%소스%'
                            ) as T
					)
		where 제품번호 = 91;
        
        update 고객,
				(
					select distinct 고객번호
                    from 주문
				) as 주문고객
		set 마일리지 = 마일리지 * 1.1
        where 고객.고객번호 in (주문고객.고객번호);
        
        select 
			*
            from 고객
            where 고객번호 in (select distinct 고객번호
								from 주문);
					
		update 고객
        inner join 마일리지등급
        on 마일리지 between 하한마일리지 and 상한마일리지
        set 마일리지 = 마일리지 + 1000
        where 등급명 = 'S';
        
        select
			고객번호,
            고객회사명,
            마일리지
            from 고객
            inner join 마일리지등급
            on 마일리지 between 하한마일리지 and 상한마일리지
            where 등급명 = 'S';
            
		delete from 주문
        where 주문번호 not in (
								select distinct 주문번호
                                from 주문세부
							);
                            
		select
			*
			from 주문
            where 주문번호 = 'H0248';
            
		select
			*
			from 주문세부
            where 주문번호 = 'H0248';
            
		delete 주문, 주문세부
        from 주문
		inner join 주문세부
        on 주문.주문번호 = 주문세부.주문번호
        where 주문.주문번호 = 'H0248';
        
        select
			고객.*
			from 고객
            left outer join 주문
            on 고객.고객번호 = 주문.고객번호
            where 주문.고객번호 is null;
		
        delete 고객
        from 고객
        left join 주문
        on 고객.고객번호 = 주문.고객번호
        where 주문.고객번호 is null;
        
        select
			*
		from 고객
        where 고객번호 in('BQQZA', 'RISPA', 'SSAFI', 'TTRAN');
		
        /* 점검문제 1번 */
        
		insert into 제품(제품번호, 제품명, 포장단위, 단가, 재고)
		values(95, '망고베리 아이스크림', '400g', 800, 30);	
        
        /* 점검문제 2번 */
        
        insert into 제품(제품번호, 제품명, 단가)
        values(96, '눈꽃빙수맛 아이스크림', 2000);
        
		/* 점검문제 3번 */
        
        update 제품
        set 재고 = '30'
        where 제품번호 = '96';
        
        /* 점검문제 4번 */
        delete 부서
        from 부서
        left outer join 사원
        on 부서.부서번호 = 사원.부서번호
        where 사원.부서번호 is null;
        
        

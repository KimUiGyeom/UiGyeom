/* 점검문제 1번 */
        
		insert into 제품(제품번호, 제품명, 포장단위, 단가, 재고)
		values(95, '망고베리 아이스크림', '400g', 800, 30);	
        
        /* 점검문제 2번 */
        
        insert into 제품(제품번호, 제품명, 단가)
        values(96, '눈꽃빙수맛 아이스크림', 2000);
        
		/* 점검문제 3번 */
        
        update 제품
        set 재고 = '30'
        where 제품번호 = '96';
        
        /* 점검문제 4번 */
        
        delete 부서
        from 부서
        left outer join 사원
        on 부서.부서번호 = 사원.부서번호
        where 사원.부서번호 is null;
        
        create database 한빛학사;
        
        create table 학과
			(
				학과번호 CHAR(2),
                학과명 VARCHAR(20),
                학과장명 VARCHAR(20)
			);
            
		insert into 학과
        values('AA', '컴퓨터공학과', '배경민'),
			('BB', '소프트웨어학과', '김남준'),
            ('CC', '디자인융합학과', '박선영');
			
        create table 학생
			(
				학번 CHAR(5),
                이름 VARCHAR(20),
                생일 DATE,
                연락처 VARCHAR(20),
                학과번호 CHAR(2)
			);
        
        insert into 학생
        values('S0001', '이윤주', '2020-01-30', '01033334444', 'AA'),
			('S0001', '이승은', '2021-02-23', NULL, 'AA'),
            ('S0003', '백재용', '2018-03-31', '01077778888', 'DD');
            
		update 학생
        set 학번 = 'S0002'
        where 이름 = '이승은';
		
        create table 휴학생 as
			select *
            from 학생
            where 1=2;
        
        create table 회원
			(
				아이디 VARCHAR(20) PRIMARY KEY,
                회원명 VARCHAR(20),
                키 INT,
                몸무게 INT,
                체질량지수 DECIMAL(4,1) AS (몸무게 / POWER(키 / 100, 2)) STORED
			);
                
        insert into 회원(아이디, 회원명, 키, 몸무게)
        values('APPLE', '김사과', 178, 70);
        
        alter table 학생 add 성별 CHAR(1);
        
        alter table 학생 modify column 성별 VARCHAR(2);
        
        alter table 학생 change column 연락처 휴대폰번호 VARCHAR(20);
        
        alter table 학생 drop column 성별;
        
        alter table 휴학생 rename 졸업생;
        
        drop table 학과;
        
        drop table 학생;
        
		/* 예제 8-12 방법1 */
        create table 학과
			(
				학과번호 char(2) primary key,
                학과명 varchar(20) not null,
                학과장명 varchar(20)
			);
		
        /* 예제 8-12 방법2 */
        create table 학과
			(
				학과번호 char(2),
				학과명 varchar(20) not null,
                학과장명 varchar(20),
                primary key(학과번호)
			);
		
        /* 예제 8-13 방법1 */
        create table 학생
			(
				학번 char(5) primary key,
                이름 varchar(20) not null,
                생일 date not null,
                연락처 varchar(20) unique,
                학과번호 char(2) references 학과(학과번호),
                성별 char(1) check(성별 in('남', '여')),
                등록일 date default(curdate()),
                foreign key(학과번호) references 학과(학과번호)
			);
			
		/* 예제 8-13 방법2 */
        create table 학생
			(
				학번 char(5),
                이름 varchar(20) not null,
                생일 date not null,
                연락처 varchar(20),
                학과번호 char(2),
                성별 char(1),
                등록일 date default(curdate()),
                primary key(학번),
                unique(연락처),
                check(성별 in('남', '여')),
                foreign key (학과번호) references 학과(학과번호)
			);
		
        /* 예제 8-14 방법1 */
        create table 과목
			(
				과목번호 char(5) primary key,
                과목명 varchar(20) not null,
                학점 int not null check(학점 between 2 and 4),
                구분 varchar(20) check(구분 in('전공', '교양', '일반'))
			);
		
        /* 예제 8-14 방법2 */
        create table 과목
			(
				과목번호 char(5),
                과목명 varchar(20),
                학점 int not null,
                구분 varchar(20),
                primary key(학번),
                check(학점 between 2 and 4),
                check(구분 in('전공', '교양', '일반'))
			);
        
        create table 수강_1
			(
				수강년도 char(4) not null,
                수강학기 varchar(20) not null check(수강학기 in('1학기', '2학기', '여름학기', '겨울학기')),
                학번 char(5) not null,
                과목번호 char(5) not null,
                성적 decimal(3,1) check(성적 between 0 and 4.5),
                primary key(수강년도, 수강학기, 학번, 과목번호),
                foreign key(학번) references 학생(학번),
                foreign key(과목번호) references 과목(과목번호)
			);
            
		create table 수강_2
			(
				수강번호 int primary key auto_increment,
                수강년도 char(4) not null,
                수강학기 varchar(20) not null check(수강학기 in('1학기', '2학기', '여름학기', '겨울학기')),
                학번 char(5) not null,
                과목번호 char(5) not null,
                성적 decimal(3,1) check(성적 between 0 and 4.5),
                foreign key(학번) references 학생(학번),
                foreign key(과목번호) references 과목(과목번호)
			);
		
        insert into 학과
        values('AA', '컴퓨터공학과', '배경민');
        
        insert into 학과
        values('BB', '소프트웨어학과', '김남준');
        
        insert into 학과
        values('CC', '디자인융합학과', '박선영');
        
        insert into 학생(학번, 이름, 학과번호, 생일)
        values('S0001', '이윤주', 'AA', '2020-01-30');
        
        insert into 학생(학번, 이름, 학과번호, 생일)
        values('S0002', '이승은', 'AA', '2020-01-30');
        
        insert into 학생(학번, 이름, 학과번호, 생일)
        values('S0003', '백재용', 'CC', '2018-03-31');
        
        insert into 과목(과목번호, 과목명, 구분, 학점)
        values('C0001', '데이터베이스실습', '전공', 3);
        
        insert into 과목(과목번호, 과목명, 구분, 학점)
        values('C0002', '데이터베이스 설계와 구축', '전공', 3);
        
        insert into 과목(과목번호, 과목명, 구분, 학점)
        values('C0003', '데이터 분석', '전공', 3);
        
        insert into 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
        values('2023', '1학기', 'S0001', 'C0001', 4.3);
        
        insert into 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
        values('2023', '1학기', 'S0001', 'C0002', 4.4);
        
        insert into 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
        values('2023', '1학기', 'S0002', 'C0002', 4.3);
        
        insert into 수강_2(수강년도, 수강학기, 학번, 과목번호, 성적)
        values('2023', '1학기', 'S0001', 'C0001', 4.3);
        
        insert into 수강_2(수강년도, 수강학기, 학번, 과목번호, 성적)
        values('2023', '1학기', 'S0001', 'C0001', 4.5);
        
        alter table 학생 add constraint check(학번 like 'S%');
        
        select
			*
            from information_schema.table_constraints
            where constraint_schema = '한빛학사'
            and table_name = '학생';
            
		alter table 학생 drop constraint 연락처;
        
        alter table 학생 drop constraint 학생_chk_1;
        
        alter table 학생 drop constraint 학생_chk_2;
        
        alter table 학생 add check (학번 like 'S%');
        
        create table 학생_2
			(
				학번 char(5),
                이름 varchar(20) not null,
                생일 date not null,
                연락처 varchar(20),
                학과번호 char(2),
                성별 char(1),
                등록일 date default(curdate()),
                primary key(학번),
                constraint UK_학생2_연락처 UNIQUE(연락처),
                constraint CK_학생2_성별 CHECK(성별 IN('남', '여')),
                constraint FK_학생2_학과번호 FOREIGN KEY (학과번호) REFERENCES 학과(학과번호)
			);
			
            select
				*
				from information_schema.table_constraints
                where constraint_schema= '한빛학사'
                and table_name= '학생_2';
                
			create table 수강평가
				(
					평가순번 int primary key auto_increment,
                    학번 char(5) not null,
                    과목번호 char(5) not null,
                    평점 int check(평점 between 0 and 5),
                    과목평가 varchar(500),
                    평가일시 datetime default current_timestamp,
                    foreign key (학번) references 학생(학번),
                    foreign key (과목번호) references 과목(과목번호) on delete cascade
				);
			
            insert into 수강평가(학번, 과목번호, 평점, 과목평가)
            values('S0001', 'C0001', 5, 'SQL학습에 도움이 되었습니다.'),
				('S0001', 'C0003', 5, 'SQL 활용을 배워서 좋았습니다.'),
				('S0002', 'C0003', 5, '데이터 분석에 관심이 생겼습니다.'),
				('S0003', 'C0003', 5, '머신러닝과 시각화 부분이 유용했습니다.');
                
			DELETE from 과목 where 과목번호= 'C0003';
            
            select * from 과목;
            
            select * from 수강평가;
            
            delete from 과목 where 과목번호 = 'C0001';
            /* 과목번호 = 'C0001' 은 수강_1에서 참조하고 있기 때문에 오류가 발생한다. */
            
            
            /* DB, 테이블 생성 및 데이터 삽입 문제 */
				create database tableDB;
                create table userTBL
					(
						아이디 varchar(10) primary key,
                        이름 varchar(10),
                        생년 year,
                        지역 varchar(10),
                        국번 char(3),
                        전화번호 varchar(10),
                        키 int,
                        가입일 varchar(10)
					);
				insert into userTBL(아이디, 이름, 생년, 지역, 국번, 전화번호, 키, 가입일)
                values('YJS', '유재석', '1972', '서울', '010', '11111111', 178, '2008.8.8'),
                ('KHD', '강호동', '1970', '경북', '011', '22222222', 182, '2007.7.7'),
                ('KKJ', '김국진', '1965', '서울', '019', '33333333', 171, '2009.9.9'),
                ('KYM', '김용만', '1967', '서울', '010', '44444444', 177, '2015.5.5'),
                ('KJD', '김제동', '1974', '경남', NULL, NULL, 173, '2013.3.3'),
                ('NHS', '남희석', '1971', '충남', '016', '66666666', 180, '2017.4.4'),
                ('SDY', '신동엽', '1971', '경기', NULL, NULL, 176, '2008.10.10'),
                ('LHJ', '이휘재', '1972', '경기', '011', '88888888', 180, '2006.4.4'),
                ('LKK', '이경규', '1960', '경남', '018', '99999999', 170, '2004.12.12'),
                ('PSH', '박수홍', '1970', '서울', '010', '00000000', 183, '2012.5.5');
                
                create table buyTBL
					(
						순번 int primary key auto_increment,
                        아이디 varchar(8),
                        물품 varchar(8),
                        분류 varchar(8),
                        단가 varchar(8),
                        수량 int,
                        foreign key(아이디) references userTBL(아이디)
					);
				
                insert into buyTBL(아이디, 물품, 분류, 단가, 수량)
                values('KHD', '운동화', NULL, '30', 2),
					('KHD', '노트북', '전자', '1000', 1),
					('KYM', '모니터', '전자', '200', 1),
					('PSH', '모니터', '전자', '200', 5),
					('KHD', '청바지', '의류', '50', 3),
					('PSH', '메모리', '전자', '80', 10),
					('KJD', '책', '서적', '15', 5),
					('LHJ', '책', '서적', '15', 2),
					('LHJ', '청바지', '의류', '50', 1),
					('PSH', '운동화', NULL, '30', 2),
					('LHJ', '책', '서적', '15', 1),
					('PSH', '운동화', NULL, '30', 2);
                
						
            /* 점검문제 1번 */
            /* 제품 테이블의 재고 컬럼에 CHECK 제약조건을 추가하시오. */
            
            
            /* 점검문제 2번 */
            /*제품 테이블에 재고금액 컬럼을 추가하시오. 이때 재고금액은 '단가*재고'가 자동 계산되어 저장되도록 합니다.*/
            
            
            /* 점검문제 3번 */
            /*제품 테이블에서 제품 레코드를 삭제하면 주문세부 테이블에 있는 관련 레코드도 함께 
            삭제되도록 주문세부 테이블의 제품번호 컬럼에 외래키 제약조건과 옵션을 설정하시오*/
            
            
            
